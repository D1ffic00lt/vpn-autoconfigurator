name: Deploy services

on:
  release:
    types: [published]

env:
  REGISTRY: ghcr.io
  PEER_IMAGE_NAME: peers-generator

permissions:
  contents: read
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            peers-generator:
              - 'peers-generator/**'

      - name: "Set up QEMU"
        uses: docker/setup-qemu-action@v1

      - name: "Set up Docker Buildx"
        uses: docker/setup-buildx-action@v2

      - name: "Log in to GitHub Container Registry"
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: set lower case owner name
        run: |
          echo "OWNER_LC=${OWNER,,}" >>${GITHUB_ENV}
        env:
          OWNER: '${{ github.repository_owner }}'
      - name: "Build and push | peers-generator (ghcr.io)"
        if: steps.changes.outputs.peers-generator == 'true'
        uses: docker/build-push-action@v4
        with:
          context: peers-generator/
          file: peers-generator/Dockerfile
          tags: ${{ env.REGISTRY }}/${{ env.OWNER_LC }}/${{ env.PEER_IMAGE_NAME }}:latest
          push: true
          platforms: linux/amd64,linux/arm64

      - name: "Login to Docker Hub"
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: "Build and push | peers-generator"
        if: steps.changes.outputs.peers-generator == 'true'
        uses: docker/build-push-action@v4
        with:
          context: peers-generator/
          file: peers-generator/Dockerfile
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.PEER_IMAGE_NAME }}:latest
          push: true
          platforms: linux/amd64,linux/arm64

      - name: "Run deploy on server"
        uses: appleboy/ssh-action@v0.1.4
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          script: |
            cd /vpn
            sudo docker-compose -f docker-compose.yml -p peers-generator pull
            sudo nice -n -20 docker-compose -f docker-compose.yml up -d
